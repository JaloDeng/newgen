{"version":3,"sources":["webpack:///src/components/utils/Editor.vue","webpack:///./src/components/utils/Editor.vue?d8da","webpack:///./src/components/utils/Editor.vue","webpack:///src/components/activity/Activity.vue","webpack:///./src/components/activity/Activity.vue?d6cd","webpack:///./src/components/activity/Activity.vue","webpack:///./src/components/activity ^\\.\\/.*\\.vue$","webpack:///./node_modules/wangeditor/release/wangEditor.js"],"names":["Editor","name","data","editorContent","mounted","_this","this","editor","wangEditor_default","a","$refs","customConfig","onchange","html","create","utils_Editor","render","_h","$createElement","_c","_self","ref","staticStyle","text-align","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","Activity","activities","activity","id","status","title","summary","sponsorId","homePath","serialNumber","fromTime","toTime","address","detail","expenseExplanation","refundExplanation","notice","clickCount","likeCount","shareCount","remark","releaseTime","createTime","updateTime","dialogTitle","dialogVisible","page","size","sizes","tableLoading","total","methods","add","form","alert","cancelEdit","emptyData","currentChange","_currentChange","load","del","row","$confirm","confirmButtonText","cancelButtonText","type","then","catch","keywordsChange","val","search","_this2","postRequest2","resp","showAddView","showEditView","txt","append","sizeChange","_sizeChange","components","activity_Activity","_vm","padding","justify-content","align-items","display","width","attrs","placeholder","clearable","prefix-icon","on","change","nativeOn","keyup","$event","indexOf","_k","keyCode","key","model","value","callback","$$v","$set","expression","_v","icon","click","float","margin-right","padding-left","padding-top","directives","rawName","border-radius","box-shadow","border","cell-style","header-cell-style","prop","label","fixed","scopedSlots","_u","fn","scope","margin","background","page-sizes","page-size","current-page","layout","size-change","current-change","rules","close-on-click-modal","visible","before-close","update:visible","gutter","span","readonly","staticClass","slot","map","./Activity.vue","webpackContext","req","webpackContextResolve","Error","keys","Object","resolve","module","exports","factory","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","div","nodeType","selectorResult","Array","replace","trim","document","createElement","innerHTML","children","result","querySelectorAll","length","i","$","prototype","constructor","forEach","elem","call","clone","deep","cloneList","push","cloneNode","get","index","first","last","types","split","addEventListener","e","target","matches","off","removeEventListener","attr","getAttribute","setAttribute","addClass","className","arr","filter","item","join","removeClass","css","currentStyle","style","resultArr","show","hide","childNodes","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","test","isIE","window","objForEach","obj","hasOwnProperty","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","reg","_emptyFn","DropList","menu","opt","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","selectionText","checkResult","$selectionELem","$parent","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$trs","trLength","tr","locationData","$currentTr","newTr","trData","tdIndex","$currentTd","toLowerCase","$table","textValId","width30","width50","width100","delBtn","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","tabsConfig","fileElem","fileList","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","getData","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","codeHandle","txtHtml","ignoreImg","pasteTime","canDo","now","Date","flag","pasteHtml","filterStyle","pasteText","docSplitHtml","getPasteHtml","ex","pasteFiles","items","getAsFile","getPasteImgs","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","img","onload","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","onreadystatechange","readyState","responseText","JSON","parse","customInsert","errno","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","toolbarSelector","textSelector","_initConfig","assign","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","currentHtml","_offAllEvent","varArgs","TypeError","to","arguments","nextSource","nextKey","Element","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","ownerDocument","getElementsByTagName","wangEditor"],"mappings":"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","file":"static/js/1.955f2a062a9ef26d2790.js","sourcesContent":["<template>\r\n  <div>\r\n    <div ref=\"editor\" style=\"text-align:left\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Editor from 'wangeditor'\r\n\r\nexport default {\r\n  name: 'editor',\r\n  data () {\r\n    return {\r\n      editorContent: ''\r\n    }\r\n  },\r\n  mounted () {\r\n    var editor = new Editor(this.$refs.editor)\r\n    editor.customConfig.onchange = (html) => {\r\n      this.editorContent = html\r\n    }\r\n    editor.create()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/utils/Editor.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"editor\",staticStyle:{\"text-align\":\"left\"}})])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-57c0cb13\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/utils/Editor.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-57c0cb13\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Editor.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Editor.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Editor.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-57c0cb13\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Editor.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-57c0cb13\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/utils/Editor.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div>\r\n    <el-container>\r\n      <el-header style=\"padding: 0px;justify-content:space-between;align-items: center\">\r\n        <div style=\"display: inline; text-align:center\">\r\n          <el-input placeholder=\"\" clearable @change=\"keywordsChange\" style=\"width: 500px;\"  size=\"mini\"\r\n            @keyup.enter.native=\"search\" prefix-icon=\"el-icon-search\" v-model=\"activity.title\"></el-input>\r\n          <el-button type=\"primary\" size=\"mini\" style=\"\" icon=\"el-icon-search\" @click=\"search\"></el-button>\r\n        </div>\r\n        <div style=\"float: right;margin-right: 20px;display: inline\">\r\n          <el-button type=\"primary\" size=\"mini\" icon=\"el-icon-plus\" @click=\"showAddView\">添加活动</el-button>\r\n        </div>\r\n      </el-header>\r\n      <el-main style=\"padding-left: 0px;padding-top: 0px\">\r\n        <div>\r\n          <el-table :data=\"activities\" v-loading=\"tableLoading\" size=\"mini\" style=\"width: 100%;border-radius: 4px; box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)\" border=\"0\" cell-style=\"text-align: center\" header-cell-style=\"text-align: center\">\r\n            <el-table-column type=\"selection\" width=\"30\"></el-table-column>\r\n            <el-table-column prop=\"title\" label=\"主题\"></el-table-column>\r\n            <el-table-column prop=\"statusName\" label=\"状态\"></el-table-column>\r\n            <el-table-column prop=\"sponsor\" label=\"主办方\"></el-table-column>\r\n            <el-table-column prop=\"releaseTime\" label=\"发布时间\"></el-table-column>\r\n            <el-table-column prop=\"fromTime\" label=\"开始时间\"></el-table-column>\r\n            <el-table-column prop=\"toTime\" label=\"结束时间\"></el-table-column>\r\n            <el-table-column fixed=\"right\" label=\"操作\" width=\"160\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button @click=\"showEditView(scope.row)\" size=\"mini\" style=\"padding: 3px 4px 3px 4px;margin: 2px\">编辑</el-button>\r\n                <el-button @click=\"del(scope.row)\" size=\"mini\" type=\"danger\" style=\"padding: 3px 4px 3px 4px;margin: 2px\">删除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          <br />\r\n          <div style=\"justify-content:space-between;\">\r\n            <el-pagination background :page-sizes=\"sizes\" :page-size=\"size\" @size-change=\"sizeChange\" :current-page=\"page\" @current-change=\"currentChange\"\r\n              layout=\"sizes, prev, pager, next, ->, total\" :total=\"total\" style=\"text-align:center\"></el-pagination>\r\n          </div>\r\n        </div>\r\n      </el-main>\r\n    </el-container>\r\n    <el-form :model=\"activity\" :rules=\"rules\" ref=\"addForm\" style=\"margin: 0px;padding: 0px;\">\r\n      <div style=\"text-align: left;\">\r\n        <el-dialog :title=\"dialogTitle\" style=\"padding: 0px\" :close-on-click-modal=\"false\" :visible.sync=\"dialogVisible\" :before-close=\"cancelEdit\" width=\"80%\">\r\n          <el-row :gutter=\"5\">\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"主题\" prop=\"title\">\r\n                  <el-input prefix-icon=\"el-icon-edit\" v-model=\"activity.title\" size=\"mini\" style=\"width: 300px\" placeholder=\"请输入活动主题\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"摘要\" prop=\"summary\">\r\n                  <el-input prefix-icon=\"el-icon-edit\" v-model=\"activity.summary\" size=\"mini\" style=\"width: 300px\" placeholder=\"请输入活动摘要\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"主办方\" prop=\"sponsorId\">\r\n                  <el-input prefix-icon=\"el-icon-user\" v-model=\"activity.sponsorId\" size=\"mini\" style=\"width: 300px\" placeholder=\"请输入活动主办方\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row :gutter=\"1\">\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"起始时间\" prop=\"fromTime\">\r\n                  <el-input prefix-icon=\"el-icon-time\" v-model=\"activity.fromTime\" size=\"mini\" style=\"width: 300px\" placeholder=\"请输入活动起始时间\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"结束时间\" prop=\"toTime\">\r\n                  <el-input prefix-icon=\"el-icon-time\" v-model=\"activity.toTime\" size=\"mini\" style=\"width: 300px\" placeholder=\"请输入活动结束时间\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"地址\" prop=\"address\">\r\n                  <el-input prefix-icon=\"el-icon-location\" v-model=\"activity.address\" size=\"mini\" style=\"width: 300px\" placeholder=\"请输入活动地址\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"详情\" prop=\"detail\">\r\n                  <el-input prefix-icon=\"el-icon-edit\" v-model=\"activity.detail\" size=\"mini\" style=\"width: 300px\" placeholder=\"请输入活动详情\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"费用说明\" prop=\"expenseExplanation\">\r\n                  <el-input prefix-icon=\"el-icon-edit\" v-model=\"activity.expenseExplanation\" size=\"mini\" style=\"width: 300px\" placeholder=\"请输入活动费用说明\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"报名须知\" prop=\"notice\">\r\n                  <el-input prefix-icon=\"el-icon-edit\" v-model=\"activity.notice\" size=\"mini\" style=\"width: 300px\" placeholder=\"请输入活动报名须知\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"备注\" prop=\"remark\">\r\n                  <el-input prefix-icon=\"el-icon-edit\" v-model=\"activity.remark\" size=\"mini\" style=\"width: 300px\" placeholder=\"请输入活动备注\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n            <el-col :span=\"6\">\r\n              <div>\r\n                <el-form-item label=\"发布时间\" prop=\"releaseTime\">\r\n                  <el-input prefix-icon=\"el-icon-time\" v-model=\"activity.releaseTime\" size=\"mini\" style=\"width: 300px\" readonly=\"true\"></el-input>\r\n                </el-form-item>\r\n              </div>\r\n            </el-col>\r\n          </el-row>\r\n          <el-row>\r\n            <editor v-model=\"activity.title\"></editor>\r\n          </el-row>\r\n          <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button size=\"mini\" @click=\"cancelEdit\">取消</el-button>\r\n            <el-button size=\"mini\" type=\"primary\" @click=\"add('addForm')\">确认</el-button>\r\n          </span>\r\n        </el-dialog>\r\n      </div>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Editor from '../utils/Editor'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      activities: [],\r\n      activity: {\r\n        id: '',\r\n        status: '',\r\n        title: '',\r\n        summary: '',\r\n        sponsorId: '',\r\n        homePath: '',\r\n        serialNumber: '',\r\n        editor: '',\r\n        fromTime: '',\r\n        toTime: '',\r\n        address: '',\r\n        detail: '',\r\n        expenseExplanation: '',\r\n        refundExplanation: '',\r\n        notice: '',\r\n        clickCount: '',\r\n        likeCount: '',\r\n        shareCount: '',\r\n        remark: '',\r\n        releaseTime: '',\r\n        createTime: '',\r\n        updateTime: ''\r\n      },\r\n      dialogTitle: '',\r\n      dialogVisible: false,\r\n      page: 1,\r\n      size: 10,\r\n      sizes: [10, 20, 50],\r\n      tableLoading: false,\r\n      total: 0\r\n    }\r\n  },\r\n  methods: {\r\n    add (form) {\r\n      alert('点击添加确定按钮')\r\n    },\r\n    cancelEdit () {\r\n      this.dialogVisible = false\r\n      this.emptyData()\r\n    },\r\n    currentChange (currentChange) {\r\n      this.page = currentChange\r\n      this.load()\r\n    },\r\n    del (row) {\r\n      this.$confirm('此操作将永久删除[' + row.title + ']，是否继续？', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        alert('点击删除')\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    emptyData () {\r\n      this.activity = {\r\n        id: '',\r\n        status: '',\r\n        title: '',\r\n        summary: '',\r\n        sponsorId: '',\r\n        homePath: '',\r\n        serialNumber: '',\r\n        editor: '',\r\n        fromTime: '',\r\n        toTime: '',\r\n        address: '',\r\n        detail: '',\r\n        expenseExplanation: '',\r\n        refundExplanation: '',\r\n        notice: '',\r\n        clickCount: '',\r\n        likeCount: '',\r\n        shareCount: '',\r\n        remark: '',\r\n        releaseTime: '',\r\n        createTime: '',\r\n        updateTime: ''\r\n      }\r\n    },\r\n    keywordsChange (val) {\r\n      if (val === '') {\r\n        this.search()\r\n      }\r\n    },\r\n    load () {\r\n      var _this = this\r\n      this.tableLoading = true\r\n      _this.activity.page = this.page\r\n      _this.activity.size = this.size\r\n      this.postRequest2('/getActivityList', _this.activity).then(resp => {\r\n        this.tableLoading = false\r\n        if (resp && resp.status === 200) {\r\n          var data = resp.data\r\n          _this.activities = data.data\r\n          _this.total = data.total\r\n        }\r\n      })\r\n    },\r\n    search () {\r\n      this.page = 1\r\n      this.load()\r\n    },\r\n    showAddView () {\r\n      this.dialogTitle = '添加'\r\n      this.dialogVisible = true\r\n    },\r\n    showEditView (row) {\r\n      this.dialogTitle = '编辑'\r\n      this.activity = row\r\n      this.dialogVisible = true\r\n      Editor.txt.append('this.activity.title')\r\n    },\r\n    sizeChange (sizeChange) {\r\n      this.size = sizeChange\r\n      this.load()\r\n    }\r\n  },\r\n  mounted: function () {\r\n    this.load()\r\n  },\r\n  components: {\r\n    Editor\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n  .el-dialog__body {\r\n    padding-top: 0px;\r\n    padding-bottom: 0px;\r\n  }\r\n\r\n  .slide-fade-enter-active {\r\n    transition: all .8s ease;\r\n  }\r\n\r\n  .slide-fade-leave-active {\r\n    transition: all .8s cubic-bezier(1.0, 0.5, 0.8, 1.0);\r\n  }\r\n\r\n  .slide-fade-enter, .slide-fade-leave-to {\r\n    transform: translateX(10px);\r\n    opacity: 0;\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/activity/Activity.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-container',[_c('el-header',{staticStyle:{\"padding\":\"0px\",\"justify-content\":\"space-between\",\"align-items\":\"center\"}},[_c('div',{staticStyle:{\"display\":\"inline\",\"text-align\":\"center\"}},[_c('el-input',{staticStyle:{\"width\":\"500px\"},attrs:{\"placeholder\":\"\",\"clearable\":\"\",\"size\":\"mini\",\"prefix-icon\":\"el-icon-search\"},on:{\"change\":_vm.keywordsChange},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.search($event)}},model:{value:(_vm.activity.title),callback:function ($$v) {_vm.$set(_vm.activity, \"title\", $$v)},expression:\"activity.title\"}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-search\"},on:{\"click\":_vm.search}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"float\":\"right\",\"margin-right\":\"20px\",\"display\":\"inline\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"icon\":\"el-icon-plus\"},on:{\"click\":_vm.showAddView}},[_vm._v(\"添加活动\")])],1)]),_vm._v(\" \"),_c('el-main',{staticStyle:{\"padding-left\":\"0px\",\"padding-top\":\"0px\"}},[_c('div',[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.tableLoading),expression:\"tableLoading\"}],staticStyle:{\"width\":\"100%\",\"border-radius\":\"4px\",\"box-shadow\":\"0 2px 12px 0 rgba(0, 0, 0, 0.1)\"},attrs:{\"data\":_vm.activities,\"size\":\"mini\",\"border\":\"0\",\"cell-style\":\"text-align: center\",\"header-cell-style\":\"text-align: center\"}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"30\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"title\",\"label\":\"主题\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"statusName\",\"label\":\"状态\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"sponsor\",\"label\":\"主办方\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"releaseTime\",\"label\":\"发布时间\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"fromTime\",\"label\":\"开始时间\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"toTime\",\"label\":\"结束时间\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"fixed\":\"right\",\"label\":\"操作\",\"width\":\"160\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{staticStyle:{\"padding\":\"3px 4px 3px 4px\",\"margin\":\"2px\"},attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.showEditView(scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"padding\":\"3px 4px 3px 4px\",\"margin\":\"2px\"},attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.del(scope.row)}}},[_vm._v(\"删除\")])]}}])})],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticStyle:{\"justify-content\":\"space-between\"}},[_c('el-pagination',{staticStyle:{\"text-align\":\"center\"},attrs:{\"background\":\"\",\"page-sizes\":_vm.sizes,\"page-size\":_vm.size,\"current-page\":_vm.page,\"layout\":\"sizes, prev, pager, next, ->, total\",\"total\":_vm.total},on:{\"size-change\":_vm.sizeChange,\"current-change\":_vm.currentChange}})],1)],1)])],1),_vm._v(\" \"),_c('el-form',{ref:\"addForm\",staticStyle:{\"margin\":\"0px\",\"padding\":\"0px\"},attrs:{\"model\":_vm.activity,\"rules\":_vm.rules}},[_c('div',{staticStyle:{\"text-align\":\"left\"}},[_c('el-dialog',{staticStyle:{\"padding\":\"0px\"},attrs:{\"title\":_vm.dialogTitle,\"close-on-click-modal\":false,\"visible\":_vm.dialogVisible,\"before-close\":_vm.cancelEdit,\"width\":\"80%\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('el-row',{attrs:{\"gutter\":5}},[_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"主题\",\"prop\":\"title\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-edit\",\"size\":\"mini\",\"placeholder\":\"请输入活动主题\"},model:{value:(_vm.activity.title),callback:function ($$v) {_vm.$set(_vm.activity, \"title\", $$v)},expression:\"activity.title\"}})],1)],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"摘要\",\"prop\":\"summary\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-edit\",\"size\":\"mini\",\"placeholder\":\"请输入活动摘要\"},model:{value:(_vm.activity.summary),callback:function ($$v) {_vm.$set(_vm.activity, \"summary\", $$v)},expression:\"activity.summary\"}})],1)],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"主办方\",\"prop\":\"sponsorId\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-user\",\"size\":\"mini\",\"placeholder\":\"请输入活动主办方\"},model:{value:(_vm.activity.sponsorId),callback:function ($$v) {_vm.$set(_vm.activity, \"sponsorId\", $$v)},expression:\"activity.sponsorId\"}})],1)],1)])],1),_vm._v(\" \"),_c('el-row',{attrs:{\"gutter\":1}},[_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"起始时间\",\"prop\":\"fromTime\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-time\",\"size\":\"mini\",\"placeholder\":\"请输入活动起始时间\"},model:{value:(_vm.activity.fromTime),callback:function ($$v) {_vm.$set(_vm.activity, \"fromTime\", $$v)},expression:\"activity.fromTime\"}})],1)],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"结束时间\",\"prop\":\"toTime\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-time\",\"size\":\"mini\",\"placeholder\":\"请输入活动结束时间\"},model:{value:(_vm.activity.toTime),callback:function ($$v) {_vm.$set(_vm.activity, \"toTime\", $$v)},expression:\"activity.toTime\"}})],1)],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"地址\",\"prop\":\"address\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-location\",\"size\":\"mini\",\"placeholder\":\"请输入活动地址\"},model:{value:(_vm.activity.address),callback:function ($$v) {_vm.$set(_vm.activity, \"address\", $$v)},expression:\"activity.address\"}})],1)],1)])],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"详情\",\"prop\":\"detail\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-edit\",\"size\":\"mini\",\"placeholder\":\"请输入活动详情\"},model:{value:(_vm.activity.detail),callback:function ($$v) {_vm.$set(_vm.activity, \"detail\", $$v)},expression:\"activity.detail\"}})],1)],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"费用说明\",\"prop\":\"expenseExplanation\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-edit\",\"size\":\"mini\",\"placeholder\":\"请输入活动费用说明\"},model:{value:(_vm.activity.expenseExplanation),callback:function ($$v) {_vm.$set(_vm.activity, \"expenseExplanation\", $$v)},expression:\"activity.expenseExplanation\"}})],1)],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"报名须知\",\"prop\":\"notice\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-edit\",\"size\":\"mini\",\"placeholder\":\"请输入活动报名须知\"},model:{value:(_vm.activity.notice),callback:function ($$v) {_vm.$set(_vm.activity, \"notice\", $$v)},expression:\"activity.notice\"}})],1)],1)])],1),_vm._v(\" \"),_c('el-row',[_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"备注\",\"prop\":\"remark\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-edit\",\"size\":\"mini\",\"placeholder\":\"请输入活动备注\"},model:{value:(_vm.activity.remark),callback:function ($$v) {_vm.$set(_vm.activity, \"remark\", $$v)},expression:\"activity.remark\"}})],1)],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":6}},[_c('div',[_c('el-form-item',{attrs:{\"label\":\"发布时间\",\"prop\":\"releaseTime\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"prefix-icon\":\"el-icon-time\",\"size\":\"mini\",\"readonly\":\"true\"},model:{value:(_vm.activity.releaseTime),callback:function ($$v) {_vm.$set(_vm.activity, \"releaseTime\", $$v)},expression:\"activity.releaseTime\"}})],1)],1)])],1),_vm._v(\" \"),_c('el-row',[_c('editor',{model:{value:(_vm.activity.title),callback:function ($$v) {_vm.$set(_vm.activity, \"title\", $$v)},expression:\"activity.title\"}})],1),_vm._v(\" \"),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.cancelEdit}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.add('addForm')}}},[_vm._v(\"确认\")])],1)],1)],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a76a1be8\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/activity/Activity.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a76a1be8\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Activity.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Activity.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Activity.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a76a1be8\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Activity.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/activity/Activity.vue\n// module id = null\n// module chunks = ","var map = {\n\t\"./Activity.vue\": \"X3L6\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"mZ0O\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/activity ^\\.\\/.*\\.vue$\n// module id = mZ0O\n// module chunks = 1","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/wangeditor/release/wangEditor.js\n// module id = sYY+\n// module chunks = 0 1"],"sourceRoot":""}